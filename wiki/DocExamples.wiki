#summary Examples of how to add doc comments to your source code.

= Introduction =

These are examples of how to add doc comments to your source code.


= Functions =

  * Use the -a option to have all functions and their parameters appear in your output.

{{{
function recast(employeeId, newRole) {
}

refresh = function(record) {
}
}}}

  * Optionally add a description of the function.

{{{
/** Change the tole of the employee. */
function recast(employeeId, newRole) {
}
}}}

= Nested Functions =

  * Use the -a option to have all nested functions and their parameters appear in your output.

{{{
record = {
    delete: function() {
    }
};

record.refresh = function(record) {
}
}}}

  * Optionally add a description of the nested function.

{{{
record = {
    /** delete the record. */
    delete: function() {
    }
};
}}}

  * Same for arbitrarily deeply nested functions.

{{{
record = {
    row: {
         field: {
            /** delete the record. */
            delete: function() {
            }
        }
    }
};
}}}

= Constructors =

  * Use the @constructor tag to indicate a function is a constructor.

{{{
/** @constructor */
function RecordSet() {
}
}}}

  * Optionally add a description of the constructor.

{{{
/**
 * A collection of records.
 * @constructor
 */
function RecordSet() {
}
}}}

= Methods =

  * Use the -a option to have all nested functions, including methods, and their parameters appear in your output.

{{{
/** @constructor */
function RecordSet() {
    this.getRecords(){
    }
}
}}}

  * Optionally add a description of the method.

{{{
/** @constructor */
function RecordSet() {
    /** Get all the records. */
    this.getRecords(){
    }
}
}}}

= Properties =

  * The -a option does not apply to properties. Only documented properties appear in the output

{{{
/** @constructor */
function RecordSet(id) {
    /** The record set's id number */
    this.id = id;
}
}}}

